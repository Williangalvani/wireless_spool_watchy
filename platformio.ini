; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32_watchy
extra_configs =
  config_common.ini

; Shared options
[env]
build_flags =
  ; Use our own lv_conf.h instead of the default one
  -I${PROJECT_DIR}/include
  -D LV_CONF_INCLUDE_SIMPLE
  ; Enable LVGL demo, remove when working on your own project
  -D LV_USE_DEMO_WIDGETS=1
  ; Add more defines below to overide lvgl:/src/lv_conf_simple.h
  ; Reduce verbosity by omitting warnings
  -w
lib_deps =
  ; Use LVGL 8 instead of 9 for better compatibility
  lvgl@^8.3.11
lib_archive = false


[env:emulator_64bits]
 platform = native@^1.1.3
 extra_scripts = support/sdl2_build_extra.py
 build_flags =
   ${env.build_flags}
   ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
   -D LV_LOG_PRINTF=1
   ; Add recursive dirs for hal headers search
   !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
   -I/opt/homebrew/Cellar/sdl2/2.32.4/include
   -L/opt/homebrew/lib
   -lSDL2
   ; Reduce verbosity by omitting warnings
   -w
   ; SDL drivers options
   -D LV_LVGL_H_INCLUDE_SIMPLE
   -D LV_DRV_NO_CONF
   -D USE_SDL
   -D SDL_ZOOM=1
   -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
 
  ; Change SDL resolution to match reference example
  -D SDL_HOR_RES=480
  -D SDL_VER_RES=320  
  -D SDL_ZOOM=1
  -D LV_SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
  ; Use monochrome theme to match e-paper display
  -D LV_USE_THEME_MONO=1

  ; LVGL memory options, setup for the demo to run properly
  -D LV_MEM_CUSTOM=1
  -D LV_MEM_SIZE="(128U * 1024U)"
  
lib_deps =
  ${env.lib_deps}
  ; Use direct URL for lv_drivers as in the reference
  lv_drivers=https://github.com/lvgl/lv_drivers/archive/refs/tags/v8.2.0.zip
build_src_filter =
  +<*>
  +<../hal/sdl2>
  ; Force compile LVGL demo
  +<../.pio/libdeps/emulator_64bits/lvgl/demos>


[env:emulator_32bits]
extends = env:emulator_64bits
build_flags =
  ${env:emulator_64bits.build_flags}
  -m32
build_src_filter =
  +<*>
  +<../hal/sdl2>
  +<../.pio/libdeps/emulator_32bits/lvgl/demos>

[env:stm32f429_disco]
platform = ststm32@^8.0.0
board = disco_f429zi
framework = stm32cube
build_flags =
  ${env.build_flags}
  -D LV_LOG_LEVEL=LV_LOG_LEVEL_NONE
  ; header's default is 25MHz, but board uses 8MHz crystal
  -D HSE_VALUE=8000000
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/stm32f429_disco')]))"
lib_deps =
  ${env.lib_deps}
  BSP-ili9341
  BSP-stmpe811
build_src_filter =
  +<*>
  +<../hal/stm32f429_disco>
  ; Force compile LVGL demo, remove when working on your own project
  +<../.pio/libdeps/stm32f429_disco/lvgl/demos>

[env:esp32_boards]
platform = espressif32
board = esp32-s3-devkitc-1 ; check displays hpp file for recommended settings
framework = arduino
build_flags =
  ${env.build_flags}
  -D LV_LOG_LEVEL=LV_LOG_LEVEL_NONE
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/esp32')]))"
lib_deps =
  ${env.lib_deps}
  lovyan03/LovyanGFX@^1.2.0
  smartpanle/PanelLan@^0.0.1
build_src_filter =
  +<*>
  +<../hal/esp32>
  ; Force compile LVGL demo, remove when working on your own project
  +<../.pio/libdeps/esp32_boards/lvgl/demos>

[env:esp32_watchy]
platform = espressif32
board = esp32dev ; Watchy v1 uses ESP32
framework = arduino
build_flags =
  ${env.build_flags}
  -D LV_USE_THEME_MONO=1
  ; Add include paths for lv_conf.h
  -I${PROJECT_DIR}/include
  -I${PROJECT_DIR}/src
  -I${PROJECT_DIR}/hal/esp32
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/esp32')]))"
lib_deps =
  ${env.lib_deps}
  SPI
  Wire
  ZinggJM/GxEPD2@^1.5.5
  adafruit/Adafruit GFX Library@^1.11.9
  adafruit/Adafruit BusIO@^1.14.5
build_src_filter =
  +<*>
  +<../hal/esp32/*.cpp>
  +<../hal/esp32/displays/*.cpp>
  ; Force compile LVGL demo, remove when working on your own project
  +<../.pio/libdeps/esp32_watchy/lvgl/demos>
monitor_speed = 115200
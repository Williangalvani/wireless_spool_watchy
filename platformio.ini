; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32_watchy
extra_configs =
  config_common.ini

; Shared options
[env]
build_flags =
  ; Include paths
  -I${PROJECT_DIR}/include
  -I${PROJECT_DIR}/src
  ; Reduce verbosity by omitting warnings
  -w
lib_deps =
  ; None needed at the shared level

[env:esp32_watchy]
platform = espressif32
board = esp32dev ; Watchy v1 uses ESP32
framework = arduino
build_flags =
  ${env.build_flags}
  ; Add include paths
  -I${PROJECT_DIR}/include
  -I${PROJECT_DIR}/src
  -I${PROJECT_DIR}/hal/esp32
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/esp32')]))"
lib_deps =
  SPI
  Wire
  ZinggJM/GxEPD2@^1.5.5
  adafruit/Adafruit GFX Library@^1.11.9
  adafruit/Adafruit BusIO@^1.14.5
  WiFi
  ArduinoOTA
build_src_filter =
  +<*>
  +<../hal/esp32/*.cpp>
  +<../hal/esp32/displays/*.cpp>
monitor_speed = 115200

; OTA upload environment that extends the basic ESP32 Watchy config
[env:esp32_watchy_ota]
extends = env:esp32_watchy
upload_protocol = espota
upload_port = watchy-lvgl.local
; Uncomment the line below and specify IP address if mDNS doesn't work
; upload_port = 192.168.1.x
upload_flags =
  --port=3232
  --auth=
  ; Uncomment and set a password if you've configured one in the OTA code
  ; --auth=your_ota_password